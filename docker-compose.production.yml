services:
    db:
        image: postgres:15
        container_name: trialapp_db_prod
        env_file: .env
        volumes:
            - pg_data_production:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
            interval: 5s
            timeout: 5s
            retries: 5
        command: postgres -c 'max_connections=1000'

    backend:
        image: trumphack/trialapp
        container_name: trialapp_backend_prod
        env_file: .env
        depends_on:
            db:
                condition: service_healthy
        restart: unless-stopped
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            PYTHONPATH: /app
            CORS_ORIGINS: "https://trialapp.ru,http://localhost:8000"
            CORS_ALLOW_CREDENTIALS: "true"
            SESSION_COOKIE_SECURE: "true"
            SESSION_COOKIE_SAMESITE: "Lax"
        command: uvicorn app.main:app --host 0.0.0.0 --port 8000

    frontend:
        image: trumphack/trialapp-frontend
        container_name: trialapp_frontend_prod
        env_file: .env
        environment:
            - NODE_ENV=production
            - API_URL=/api
            - VUE_APP_API_URL=/api
        depends_on:
            - backend
        restart: unless-stopped

    gateway:
        image: trumphack/trialappgateway
        container_name: trialapp_gateway_prod
        env_file: .env
        volumes:
            - static_volume:/staticfiles
            - media:/media
        environment:
            BACKEND_HOST: backend
            FRONTEND_HOST: frontend
            NGINX_HOST: trialapp.ru
            BACKEND_URL: http://backend:8000
            FRONTEND_URL: http://frontend:80
        ports:
            - "8000:80"
        depends_on:
            - frontend
            - backend
        restart: unless-stopped

volumes:
    pg_data_production:
        name: trialapp_postgres_data_prod
